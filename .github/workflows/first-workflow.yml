name: Django CI

on:
  #push:
  #  branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test
      
      
  
  
  
#   name: Test and release

# # Fires on all incoming commits
# on: [push]

# jobs:

#   # Test
#   test:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python: [3.6, 3.7, 3.8]

#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-python@v1
#         with:
#           python-version: ${{ matrix.python }}
#       - name: Install dependencies
#         run: pip install tox tox-gh-actions
#       - name: Run tests
#         run: tox --parallel
#         env:
#           TOX_PARALLEL_NO_SPINNER: 1
#       #Deploy to Heroku
#       #- uses: actions/checkout@v2
#       - name: Deploy Deploy to Heroku
#         uses: CDNievas/heroku-action@v1.0 # This is the action
#         with:
#           heroku_email: "abuhijleh@abuhijleh.net"
#           heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#           heroku_app_name: "abuhijleh-first-django"          

          

#   # Create a new semantic release
#   #release:
#   #  needs: test
#   #  runs-on: ubuntu-latest
#   #  steps:
#   #    - uses: actions/checkout@v2
#   #   - uses: actions/setup-python@v1
#   #      with:
#    #       python-version: 3.8
#  #     - uses: cycjimmy/semantic-release-action@v2
#  #       with:
#  #         semantic_version: 17
#  #         extra_plugins: |
#  #           @semantic-release/exec@5
#  #       env:
#  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#  #         TWINE_USERNAME: __token__
#  #         TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
