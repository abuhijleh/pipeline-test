name: First CI/CD workflow
#### ADD things to workflow
#### 2 tyings to fix: the Static files and the Variables for allowed hosts
### Lint, Security, Secret Scanning ...etc
### attach log on Build Log failure


on:
  #push:
  #  branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6] #[3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test


    - name: Heroku Review App Deployment Status
      # You may pin to the exact commit or the version.
      # uses: niteoweb/reviewapps-deploy-status@82f706f07b4acd9ebb031f1eac2bd9c0fd82f159
      uses: niteoweb/reviewapps-deploy-status@v1.4.0
      
  #Test Review apps 
  # UNFORTUNATELY. THIS IS ONLY FOR NODE!!!! We might create the DJANGO later     
  # review-app:
  #   needs: build
  #   name: Heroku Review Application
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Heroku Review Application
  #       uses: mheap/github-action-pr-heroku-review-app@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         HEROKU_API_TOKEN: 	${{ secrets.HEROKU_API_KEY }}
  #         HEROKU_PIPELINE_ID: "pipeline-test-001"
  #         #ENVIRONMENT: "dev"
  #         #HEROKU_HOSTNAME: ".herokuapp.com"   
  #     - name: Heroku Build Logs
  #       #### SHOULD GIT THE LOGS IF IT FAILED
  #       if: ${{ failure() }}
  #       uses: mheap/github-action-heroku-logs@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         HEROKU_AUTH_TOKEN: ${{ secrets.HEROKU_API_KEY }}
         
          

  staging:
   needs: build
   runs-on: ubuntu-latest
   steps:
    - uses: actions/checkout@v2      
    - name: Deploy Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.7.8 # This is the action
      with:
        heroku_email: "abuhijleh@abuhijleh.net"
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: "pipeline-test-001" 
    - name: Heroku Build Logs
      #### SHOULD GIT THE LOGS IF IT FAILED
      if: ${{ failure() }}
      uses: mheap/github-action-heroku-logs@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HEROKU_AUTH_TOKEN: ${{ secrets.HEROKU_API_KEY }}

  production:
   needs: staging
   runs-on: ubuntu-latest
   steps:
    - name: Promote to production
    # You may pin to the exact commit or the version.
    # uses: tiltshift/heroku-promote-app@342a661f8c6451e34e9eca0b435d3f2953aa33bc
      uses: tiltshift/heroku-promote-app@v1
      with:
        heroku_email: "abuhijleh@abuhijleh.net"
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: "pipeline-test-001"
        
    - name: Heroku Build Logs
      #### SHOULD GIT THE LOGS IF IT FAILED
      if: ${{ failure() }}
      uses: mheap/github-action-heroku-logs@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HEROKU_AUTH_TOKEN: ${{ secrets.HEROKU_API_KEY }}
      
 

  
  
#   name: Test and release

# # Fires on all incoming commits
# on: [push]

# jobs:

#   # Test
#   test:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python: [3.6, 3.7, 3.8]

#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-python@v1
#         with:
#           python-version: ${{ matrix.python }}
#       - name: Install dependencies
#         run: pip install tox tox-gh-actions
#       - name: Run tests
#         run: tox --parallel
#         env:
#           TOX_PARALLEL_NO_SPINNER: 1
#       #Deploy to Heroku
#       #- uses: actions/checkout@v2
#       - name: Deploy Deploy to Heroku
#         uses: CDNievas/heroku-action@v1.0 # This is the action
#         with:
#           heroku_email: "abuhijleh@abuhijleh.net"
#           heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#           heroku_app_name: "abuhijleh-first-django"          

          

#   # Create a new semantic release
#   #release:
#   #  needs: test
#   #  runs-on: ubuntu-latest
#   #  steps:
#   #    - uses: actions/checkout@v2
#   #   - uses: actions/setup-python@v1
#   #      with:
#    #       python-version: 3.8
#  #     - uses: cycjimmy/semantic-release-action@v2
#  #       with:
#  #         semantic_version: 17
#  #         extra_plugins: |
#  #           @semantic-release/exec@5
#  #       env:
#  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#  #         TWINE_USERNAME: __token__
#  #         TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
